@use '@/styles/colors';
@use '@/styles/mixins';

.button {
  @include mixins.transition(background-color border-color color);
  text-decoration: none;

  border-width: 0.125rem;
  border-radius: 1000rem;
  display: inline-flex;
  justify-content: center;
  border-style: solid;
  cursor: pointer;

  padding: mixins.spacing(sm) mixins.spacing(x-big);
  appearance: none;
}

.type {
  &--primary {
    background-color: rgb(var(--button-color));
    border-color: rgb(var(--button-color));
    color: colors.getColor(shade, 0) !important;

    &:hover {
      background-color: rgb(var(--button-color-hover));
      border-color: rgb(var(--button-color-hover));
    }

    &:focus,
    &:active {
      background-color: rgb(var(--button-color-active));
      border-color: rgb(var(--button-color-active));
    }
  }

  &--secondary {
    background-color: transparent;
    border-color: rgb(var(--button-color));
    color: rgb(var(--button-color)) !important;

    &:hover {
      border-color: rgb(var(--button-color-hover));
      color: rgb(var(--button-color-hover)) !important;
    }

    &:focus,
    &:active {
      border-color: rgb(var(--button-color-active));
      color: rgb(var(--button-color-active)) !important;
    }
  }

  &--tertiary {
    background-color: transparent;
    border-color: transparent;
    color: rgb(var(--button-color)) !important;

    &:hover {
      color: rgb(var(--button-color-hover)) !important;
    }

    &:focus,
    &:active {
      color: rgb(var(--button-color-active)) !important;
    }
  }
}

%disabled {
  --button-color: var(#{colors.getVar(neutral, 200)});
  --button-color-hover: var(#{colors.getVar(neutral, 200)});
  --button-color-active: var(#{colors.getVar(neutral, 200)});
}

.disabled,
.button:disabled {
  @extend %disabled;
  cursor: not-allowed;
}

.loading {
  @extend %disabled;
  cursor: wait;
}

.loader {
  @keyframes load {
    from {
      transform: rotate(0);
    }
    to {
      transform: rotate(360deg);
    }
  }
  transform-origin: center;
  animation: load 1s linear 0s infinite;
}
